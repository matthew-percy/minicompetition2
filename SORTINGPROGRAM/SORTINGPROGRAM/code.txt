using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace SORTINGPROGRAM
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }



        private void displayListInListBox(List<int> originalList, ListBox listBox,bool sorted = false)
        {
            List<int> newList = originalList.ToList();

            if (sorted)
            {
                List<int> duplicates = new List<int>();

                foreach (int i in newList)
                {
                    List<int> temp = newList.Where(x => x == i).ToList();
                    if (duplicates.Contains(i))
                    {
                        continue;
                    }
                    if (temp.Count > 1)
                    {
                        listBox.Items.Add(i + " (" + temp.Count + ") ");
                        //newList.RemoveAll(x => x == i);
                        duplicates.Add(i);
                    }
                    else
                    {
                        listBox.Items.Add(i.ToString());
                    }
                }

                //List<int> test = list.Where(x => x == 3).ToString();//x ==> x = 3);

                //list.RemoveAll(x => x == 3);
            }
            else
            {
                foreach (int i in newList)
                {
                    listBox.Items.Add(i.ToString());
                }
            }
        }

        private void buttonSort_Click(object sender, EventArgs e)
        {
            listBoxAscending.Items.Clear();
            listBoxDescending.Items.Clear();
            listBoxOriginal.Items.Clear();

            int start = int.Parse(txtBoxStart.Text);
            int end = int.Parse(txtBoxEnd.Text);

            Random r = new Random();

            List<int> randomSequence = new List<int>();

            for (int i = 0; i < 100; i++)
            {
                randomSequence.Add( r.Next(start, end + 1));
            }

            displayListInListBox(randomSequence, listBoxOriginal);

            randomSequence.Sort();
            displayListInListBox(randomSequence, listBoxAscending, true);

            randomSequence.Reverse();
            displayListInListBox(randomSequence, listBoxDescending, true);

        }

        void ConfirmInputs()
        {
            try
            {
                int start = int.Parse(txtBoxStart.Text);
                int end = int.Parse(txtBoxEnd.Text);

                if (start > 999 || start < 1) //throw new FormatException("Start ")
                {
                    throw new FormatException();
                }
                if (end > 1000 || end < 1)
                {
                    throw new FormatException();
                }
                if (start > end)
                {
                    throw new FormatException();
                }

                buttonSort.Enabled = true;
            }
            catch (Exception ex)
            {
                buttonSort.Enabled = false;
            }
        }


        private void txtBox_KeyDown(object sender, KeyEventArgs e)
        {
            string validValues = "1234567890";

            //MessageBox.Show(e.KeyCode.ToString());

            if (validValues.Contains(e.KeyCode.ToString().Last()) || e.KeyCode == Keys.Back)
            {
                e.SuppressKeyPress = false;
            }
            else
            {
                e.SuppressKeyPress = true;
            }
        }

        private void txtBox_TextChanged(object sender, EventArgs e)
        {
            ConfirmInputs();
        }
    }
}
